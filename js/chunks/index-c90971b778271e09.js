(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[405], { 8312: function (e, t, a) { (window.__NEXT_P = window.__NEXT_P || []).push(["/", function () { return a(3037) }]) }, 3037: function (e, t, a) { "use strict"; a.r(t), a.d(t, { default: function () { return HomePage } }); var s = a(5893), r = a(6609), n = a(7421), i = JSON.parse('{"About":"About","Skills":"Skills","Experience":"Experience","Projects":"Projects","Contact":"Contact","AboutText":"Hello! I\'m Tulio, a passionate Fullstack Developer based in Brazil with over 4 years of experience in the technology industry. My specialization is in creating robust and innovative web applications using cutting-edge technologies, I am enthusiastic in the area of blockchain development with some projects done.","VCS":"Version Control System","Role":"Fullstack Developer","AdrianoCourbuccioDescription":"Within the Adriano Corbuccio group, I had the privilege of participating in transformative initiatives at Banco BrasilCard. My role not only involved driving internal projects but also revitalizing legacy systems by migrating them to cutting-edge technologies.","WejamDescription":"During my time at WeJam agency, I had the opportunity to participate in backend projects that had a positive impact on our external clients. I adopted an approach focused on cutting-edge technologies, using Node.js with TypeScript, and principles of Test-Driven Development (TDD) and Domain-Driven Design (DDD).","PhootoDescription":"During my time at Phooto, I had the privilege of contributing to internal projects of the company. I utilized React.js and JavaScript to create impactful solutions. Phooto\'s commitment to innovation and excellence provided an ideal environment to leverage these technologies and deliver high-quality results.","DaoProjectDescription":"I created a DAPP project with an autonomous decentralized organization which consists of a system made on the blockchain, where people can buy tokens and with these tokens they have the power to vote where the administrator can create proposals for the token owners to vote on.<br>&nbsp;<br>To create this system I used some technologies such as hardhat, solidity, ethers, nodejs, graphql, nextjs and tailwind css for the front-end.<br>&nbsp;<br>To execute the proposals when the minimum votes are reached and it is approved, I created a cron using the nodejs node-cron library.","DocworkingProjectDescription":"I contributed to the development of DocWorking, a groundbreaking project at WeJam agency, focused on revolutionizing the healthcare industry.<br>&nbsp;<br> The platform aimed to connect healthcare professionals with underutilized clinic spaces, providing a streamlined solution designed specifically for practitioners in the field.<br>&nbsp;<br> In this role, I specialized in backend development, ensuring the delivery of robust and scalable applications.<br>&nbsp;<br> My responsibilities included creating efficient and maintainable APIs, actively participating in code reviews, and implementing continuous integration and deployment processes.<br>&nbsp;<br> The project utilized cutting-edge technologies, employing React for dynamic user interfaces, TypeScript for robust coding, and Node.js for efficient server-side operations.<br>&nbsp;<br> The application followed a domain-driven design to guarantee a scalable architecture. AWS was leveraged to provide a secure cloud infrastructure, and Docker streamlined the deployment process.","BinanceSocketProjectDescription":"In response to a recent coding challenge, I developed a compelling mini-application designed to manage Binance websocket pricing updates. This project, initiated by forking a repository and submitting a pull request for review, aimed to showcase my skills in API integration and real-time data handling.<br>&nbsp;<br>The application seamlessly consumes the Binance API endpoint (GET https://data.binance.com/api/v3/exchangeInfo) to display relevant information. One of its user-friendly features allows users to effortlessly create and manage a list of symbols. This list, in turn, facilitates the addition of symbols to a watchlist, providing users with real-time updates on last price, best bid price, best ask price, and price change percentage.<br>&nbsp;<br>A crucial aspect of the application lies in its establishment of a WebSocket connection using user-selected symbols, ensuring nearly instantaneous updates. The WebSocket URL used for this purpose is wss://data-stream.binance.com/stream?streams={symbol}/{symbol} (Example: wss://data-stream.binance.com/stream?streams=ethbtc/bnbbtc).<br>&nbsp;<br>This project serves as a testament to my proficiency in working with APIs, implementing WebSocket connections, and crafting an intuitive interface for tracking live pricing data on the Binance platform. The incorporation of near real-time updates significantly enhances the overall user experience."}'), o = JSON.parse('{"About":"Sobre","Skills":"Habilidades","Experience":"Experi\xeancia","Projects":"Projetos","Contact":"Contato","AboutText":"Ol\xe1! Sou Tulio, um apaixonado Desenvolvedor Fullstack baseado no Brasil com mais de 4 anos de experi\xeancia na ind\xfastria de tecnologia. Minha especializa\xe7\xe3o est\xe1 na cria\xe7\xe3o de aplica\xe7\xf5es web robustas e inovadoras usando tecnologias de ponta, entusiata na \xe1rea de desenvolvimento blockchain com alguns projetos realizados.","VCS":"Versionamento","Role":"Desenvolvedor Fullstack","AdrianoCourbuccioDescription":"Dentro do grupo Adriano Corbuccio, tive o privil\xe9gio de participar de iniciativas transformadoras no banco BrasilCard. Minha fun\xe7\xe3o abrangeu n\xe3o apenas impulsionar projetos internos, mas tamb\xe9m revitalizar sistemas legados migrando-os para tecnologias de ponta.","WejamDescription":"Durante meu per\xedodo na ag\xeancia WeJam, tive a oportunidade de participar de projetos backend que tiveram um impacto positivo em nossos clientes externos. Adotei uma abordagem focada em tecnologias de ponta, utilizando Node.js com TypeScript, e princ\xedpios de Desenvolvimento Orientado a Testes (TDD) e Design Orientado a Dom\xednio (DDD).","PhootoDescription":"Durante meu tempo na Phooto, tive o privil\xe9gio de contribuir para projetos internos da empresa. Utilizei React.js e JavaScript para criar solu\xe7\xf5es impactantes. O compromisso da Phooto com a inova\xe7\xe3o e a excel\xeancia proporcionou um ambiente ideal para aproveitar essas tecnologias e entregar resultados de alta qualidade.","DaoProjectDescription":"Fiz um projeto de um DAPP com organiza\xe7\xe3o aut\xf4noma descentralizada no qual consiste em um sistema feito na blockchain, onde as pessoas podem comprar tokens e com esses tokens elas t\xeam o poder de voto onde o administrador consegue criar propostas para os donos dos tokens votarem.<br>&nbsp;<br>Para fazer esse sistema utilizei algumas tecnologias como hardhat, solidity, ethers, nodejs, graphql, nextjs e tailwind css para o front-end.<br>&nbsp;<br>Para executar as propostas quando os votos m\xednimos forem atingidos e ela for aprovada eu criei uma cron utilizando a biblioteca node-cron do nodejs.","DocworkingProjectDescription":"Contribu\xed para o desenvolvimento do DocWorking, um projeto inovador na ag\xeancia WeJam, com foco em revolucionar a ind\xfastria de sa\xfade.<br>&nbsp;<br> A plataforma visava conectar profissionais de sa\xfade a espa\xe7os de cl\xednicas subutilizados, oferecendo uma solu\xe7\xe3o eficiente projetada especificamente para praticantes na \xe1rea.<br>&nbsp;<br> Nesse papel, especializei-me no desenvolvimento de backend, garantindo a entrega de aplica\xe7\xf5es robustas e escal\xe1veis.<br>&nbsp;<br> Minhas responsabilidades inclu\xedram a cria\xe7\xe3o de APIs eficientes e de f\xe1cil manuten\xe7\xe3o, participa\xe7\xe3o ativa em revis\xf5es de c\xf3digo e implementa\xe7\xe3o de processos de integra\xe7\xe3o cont\xednua e implanta\xe7\xe3o.<br>&nbsp;<br> O projeto utilizou tecnologias de ponta, empregando React para interfaces de usu\xe1rio din\xe2micas, TypeScript para codifica\xe7\xe3o robusta e Node.js para opera\xe7\xf5es eficientes no servidor.<br>&nbsp;<br> A aplica\xe7\xe3o seguiu um design orientado a dom\xednio para garantir uma arquitetura escal\xe1vel. A AWS foi utilizada para fornecer uma infraestrutura de nuvem segura, e o Docker simplificou o processo de implanta\xe7\xe3o.","BinanceSocketProjectDescription":"Em resposta a um recente desafio de codifica\xe7\xe3o, desenvolvi uma aplica\xe7\xe3o envolvente para gerenciar as atualiza\xe7\xf5es de pre\xe7os via websocket da Binance. Esse projeto, iniciado ao criar um fork de um reposit\xf3rio e submeter um pull request para revis\xe3o, teve como objetivo destacar minhas habilidades em integra\xe7\xe3o de APIs e manipula\xe7\xe3o de dados em tempo real.<br>&nbsp;<br>A aplica\xe7\xe3o consome de maneira eficiente o endpoint da API da Binance (GET https://data.binance.com/api/v3/exchangeInfo) para exibir informa\xe7\xf5es relevantes. Uma de suas funcionalidades intuitivas permite que os usu\xe1rios criem e gerenciem facilmente uma lista de s\xedmbolos. Essa lista, por sua vez, facilita a adi\xe7\xe3o de s\xedmbolos a uma lista de observa\xe7\xe3o, proporcionando aos usu\xe1rios atualiza\xe7\xf5es em tempo real sobre o \xfaltimo pre\xe7o, melhor pre\xe7o de compra, melhor pre\xe7o de venda e percentual de mudan\xe7a de pre\xe7o.<br>&nbsp;<br>Um aspecto crucial da aplica\xe7\xe3o est\xe1 na cria\xe7\xe3o de uma conex\xe3o WebSocket usando os s\xedmbolos selecionados pelos usu\xe1rios, garantindo atualiza\xe7\xf5es quase instant\xe2neas. A URL do WebSocket usada para esse prop\xf3sito \xe9 wss://data-stream.binance.com/stream?streams={symbol}/{symbol} (Exemplo: wss://data-stream.binance.com/stream?streams=ethbtc/bnbbtc).<br>&nbsp;<br>Este projeto serve como uma evid\xeancia de minha profici\xeancia em trabalhar com APIs, implementar conex\xf5es WebSocket e criar uma interface intuitiva para acompanhar dados de pre\xe7os ao vivo na plataforma da Binance. A incorpora\xe7\xe3o de atualiza\xe7\xf5es quase em tempo real aprimora significativamente a experi\xeancia global do usu\xe1rio."}'); r.ZP.use(n.Db).init({ resources: { en: { translation: i }, pt: { translation: o } }, lng: "pt" }); var l = a(8115); let c = { playMode: "always", createContainers: !0, hideOverflow: !1, timing: { duration: 3e3 }, glitchTimeSpan: { start: .5, end: .7 }, shake: { velocity: 15, amplitudeX: .4, amplitudeY: .2 }, slice: { count: 15, velocity: 15, minHeight: .02, maxHeight: .3, hueRotate: !0 }, pulse: !1 }; function ParticlesBackground() { let e = (0, l.Z)(c); return (0, s.jsx)("div", { id: "particle-background", className: "bg-image-container", children: (0, s.jsx)("img", { src: "bg.png", className: "background-image", ref: e.ref }) }) } var m = a(7294), d = a(2010), x = a(4250), p = a(9477), u = a(2371); let MemeTunnel = e => { let { tweets: t } = e, a = (0, m.useRef)(null); return (0, m.useEffect)(() => { if (!a.current) { console.error("Canvas mount reference not found!"); return } let e = new x.xsS; e.background = null; let s = new x.SUY, r = new x.cPb(120, a.current.clientWidth / a.current.clientHeight, .05, 1e3), n = new p.CP7({ antialias: !0, alpha: !0 }); n.setClearColor(0, 0), n.setPixelRatio(2 * window.devicePixelRatio), n.setSize(a.current.clientWidth, a.current.clientHeight), a.current.appendChild(n.domElement); let i = new u.xC(n), o = new u.CD(e, r); i.addPass(o); let l = new x.dpR, c = new x.jyz({ uniforms: { time: { value: 0 }, uResolution: { value: new x.Ltg }, color1: { value: new x.Ltg(0, 0, 0, .2) }, color2: { value: new x.Ltg(74 / 255, 1, 145 / 255, .2) }, u_texture: { value: void 0 }, atlasSize: { value: new x.FM8(4, 4) } }, vertexShader: "\n        varying vec2 vUv;\n        uniform float time;\n\n\n        void main() {\n        vUv = uv;\n\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ", fragmentShader: "\n        varying vec2 vUv;\n        uniform float time;\n        uniform sampler2D u_texture;\n\n        float hash12(vec2 p){\n          vec3 p3  = fract(vec3(p.xyx) * .1031);\n          p3 += dot(p3, p3.yzx + 99.99);\n          return fract((p3.x + p3.y) * p3.z);\n        }\n\n        void main() {\n          vec2 uv = vUv;\n\n          uv.x *= 3.142596;\n\n          const float numbers = 4.0;\n\n          vec2 repeat = vec2(4.0, 2.0);\n\n          vec2 cell = (uv * repeat);\n\n          cell.x *= numbers;\n          cell = floor(cell);\n\n          float rand = 0.01 * floor(hash12(cell));\n\n          float offset = 0.0;//mod(floor(time + rand), numbers) / numbers;\n          uv = fract(uv * repeat);\n          uv.x = fract(uv.x + offset);\n\n          vec4 color = texture2D(u_texture, uv);\n\n          color -= 0.0001 * vec4(vec3(rand), 1.0);\n          gl_FragColor = color;\n        }\n      ", side: x.ehD, transparent: !0 }); c.uniforms.time.value = s.getElapsedTime(); let m = .5; let CustomSinCurve = class CustomSinCurve extends x.Hyl { getPoint(e) { let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new x.Pa4; return t.set(Math.cos(2 * Math.PI * e), Math.sin(2 * Math.PI * e), .08 * Math.sin(8 * Math.PI * e)).multiplyScalar(m) } constructor(e = 1) { super(), m = e } }; let d = new CustomSinCurve(8), h = new x.WXh(d, 10, 1, 6, !1), f = new x.Kj0(h, c); e.add(f); let b = new x.ZAu; async function loadImages() { for (let e of t) { let t = l.load(e.file, function (e) { c.uniforms.u_texture.value = e }, void 0, e => console.error("Failed to load texture: ".concat(e.message))), a = new x.Kj0(new x._12(2, 1.5), new x.Wid({ map: t, transparent: !0, opacity: .95 })); b.add(a), await new Promise(e => setTimeout(e, 3e3)) } e.add(b), await loadImages() } loadImages(); let g = 0, v = new x.Pa4, j = new x.Pa4, animate = () => { g += .01, f.rotation.z -= .005; let e = g % 1e4 / 1e4, t = f.geometry.parameters.path.getPoint(e), a = f.geometry.tangents.length, n = e * a, o = Math.floor(n), l = (o + 1) % a; j.subVectors(f.geometry.binormals[l], f.geometry.binormals[o]), j.multiplyScalar(n - o).add(f.geometry.binormals[o]); let m = f.geometry.parameters.path.getTangentAt(e); v.copy(j).cross(m), t.add(v.clone().multiplyScalar(0)), r.position.copy(t); let d = f.geometry.parameters.path.getPoint((e + 1 / f.geometry.parameters.path.getLength()) % 1); d.y -= .5, f.geometry.parameters.path.getPoint(e), r.matrix.lookAt(r.position, d, v), r.rotation.setFromRotationMatrix(r.matrix, r.rotation.order), c.uniforms.time.value = s.getElapsedTime(), i.render(), requestAnimationFrame(animate) }; animate(); let resizeRenderer = () => { if (a.current) { let { clientWidth: e, clientHeight: t } = a.current; n.setSize(e, t), i.setSize(e, t), r.aspect = a.current.clientWidth / a.current.clientHeight, r.updateProjectionMatrix(), n.setSize(a.current.clientWidth, a.current.clientHeight), i.setSize(a.current.clientWidth, a.current.clientHeight) } }; return window.addEventListener("mousemove", function (e) { f.rotation.z += .01 }), window.addEventListener("resize", resizeRenderer), resizeRenderer(), () => { var e; window.removeEventListener("resize", resizeRenderer), null === (e = a.current) || void 0 === e || e.removeChild(n.domElement), i.dispose(), n.dispose() } }, [t]), (0, s.jsx)("div", { ref: a, style: { width: "100%", height: "50vh", overflow: "hidden", backgroundColor: "transparent" }, className: "fading-right" }) }; var TubeAnimation = () => { let [e, t] = (0, m.useState)([]), [a, r] = (0, m.useState)(!1), [n, i] = (0, m.useState)(null), o = (0, m.useCallback)(async () => { try { if (e.length > 0) { t(e); return } r(!0); let a = await fetch("https://api.gagster.io/api/data/artwork/".concat(Date.now(), "?limit=100")); if (!a.ok) throw Error("HTTP error! status: ".concat(a.status)); let s = await a.json(); t(s.data.activity) } catch (e) { console.error("Error fetching tweets:", e), i(e.message) } finally { r(!1) } }, []); return ((0, m.useEffect)(() => { o() }, []), n) ? (0, s.jsxs)("div", { className: "text-red-500", children: ["Error: ", n] }) : a && 0 === e.length ? (0, s.jsx)("div", { className: "flex items-center justify-center h-screen text-white", children: "Loading memes..." }) : (0, s.jsx)(MemeTunnel, { tweets: e }) }, components_AnimatedTitle = e => { let { text: t, subtitle: a, className: r = "", size: n = "md" } = e, i = (0, l.Z)({ playMode: "always", createContainers: !0, hideOverflow: !1, timing: { duration: 2e3 }, glitchTimeSpan: { start: .5, end: .7 }, shake: { velocity: 15, amplitudeX: .2, amplitudeY: .2 }, slice: { count: 6, velocity: 15, minHeight: .02, maxHeight: .15, hueRotate: !0 }, pulse: !1 }); return (0, s.jsx)("div", { className: "page-title-wrap ".concat(r), children: (0, s.jsxs)("div", { className: "relative inline-block", children: [(0, s.jsxs)("div", { className: "tech-border title-bg", children: [(0, s.jsxs)("h1", { className: "".concat({ sm: "text-xl sm:text-2xl", md: "text-2xl sm:text-3xl", lg: "text-3xl sm:text-4xl" }[n], " font-bold page-title"), ref: i.ref, children: [t, (0, s.jsx)("div", { className: "title-scanner" }), (0, s.jsx)("div", { className: "title-glow" })] }), (0, s.jsx)("div", { className: "corner-decor top-left" }), (0, s.jsx)("div", { className: "corner-decor top-right" }), (0, s.jsx)("div", { className: "corner-decor bottom-left" }), (0, s.jsx)("div", { className: "corner-decor bottom-right" }), (0, s.jsx)("div", { className: "tech-line left" }), (0, s.jsx)("div", { className: "tech-line right" }), (0, s.jsx)("div", { className: "tech-line top" }), (0, s.jsx)("div", { className: "tech-line bottom" })] }), a && (0, s.jsxs)("div", { className: "subtitle-container title-bg", children: [(0, s.jsx)("p", { className: "page-subtitle", children: a }), (0, s.jsx)("div", { className: "subtitle-line" })] })] }) }) }, CTAButton = e => { let { text: t = "", class_name: a = null } = e; return (0, s.jsxs)("button", { className: "chat-cyber-button w-full relative overflow-hidden group bg-[#20452f] transform-gpu  transition-all duration-300 ease-in-out hover:-translate-y-0.5 active:translate-y-0.5", children: [(0, s.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-[#4AFF91]/10 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500" }), (0, s.jsx)("div", { className: "absolute inset-0 border border-[#4AFF91]/30 chat-pulse-border" }), (0, s.jsx)("div", { className: "absolute top-0 left-0 w-3 h-3 border-t-2 border-l-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute top-0 right-0 w-3 h-3 border-t-2 border-r-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute bottom-0 left-0 w-3 h-3 border-b-2 border-l-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute bottom-0 right-0 w-3 h-3 border-b-2 border-r-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "relative flex items-center justify-between px-6 py-4 z-10", children: (0, s.jsx)("span", { className: "text-xl font-bold text-[#4AFF91] group-hover:text-[#4AFF91] transition-colors duration-300 flex items-center tracking-wider", children: (0, s.jsxs)("span", { className: "chat-text-flicker ml-2 ".concat(a || ""), children: [t, "_"] }) }) }), (0, s.jsx)("div", { className: "absolute inset-x-0 bottom-0 h-[2px] chat-energy-line" })] }) }, components_FuturisticIntro = () => ((0, m.useEffect)(() => { let e = new IntersectionObserver(e => { e.forEach(e => { e.isIntersecting && e.target.classList.add("animate-fade-in") }) }, { threshold: .1 }); return document.querySelectorAll(".animate-on-scroll").forEach(t => e.observe(t)), () => e.disconnect() }, []), (0, s.jsxs)("div", { className: "relative min-h-screen from-black to-gray-900 text-white py-12", children: [(0, s.jsx)("div", { className: "fixed inset-0 grid-animation opacity-20" }), (0, s.jsxs)("div", { className: "relative z-10 container mx-auto px-4", children: [(0, s.jsxs)("div", { className: "animate-on-scroll opacity-100 max-w-3xl mx-auto", children: [(0, s.jsxs)("div", { className: "intro ", children: [(0, s.jsx)("h1", { className: "cyber-text-effect text-[#4AFF91] intro-title", children: "Meet Gagster Agent, the newest grumpy AI Artist Agent which brings an entire AI Framework for creating the funniest memes and cutting-edge social commentary on the web." }), (0, s.jsx)("p", { className: "text-[#4AFF91] intro", children: "Powered by the Agentic Creative Complex (ACC), Gagster Agent uses the latest generative AI to turn memes into more than just jokes — they have identity, minds, and became a form of art that transforms and engages." })] }), (0, s.jsxs)("div", { className: "relative flex items-center justify-center gap-4 mb-12 cta-display", children: [(0, s.jsx)("a", { href: "https://x.com/GagsterAgent", children: (0, s.jsx)(CTAButton, { text: "X" }) }), (0, s.jsx)("a", { href: "https://t.me/gagsterai", children: (0, s.jsx)(CTAButton, { text: "Telegram" }) }), (0, s.jsx)("a", { href: "https://pump.fun/coin/8dgUbHppPrkE5b4dXo8yvL3jxNC5gd21w7GzrJSMpump", children: (0, s.jsx)(CTAButton, { text: "$GAGSTER" }) })] }), (0, s.jsxs)("div", { className: "relative flex items-center justify-center gap-4 mb-12 cta-display", children: [(0, s.jsx)("a", { href: "https://github.com/Agentic-Creative-Complex/agentic-smart-meme", children: (0, s.jsx)(CTAButton, { text: "GITHUB" }) }), (0, s.jsx)("a", { href: "https://creativecomplex.io/", children: (0, s.jsx)(CTAButton, { text: "ACC" }) })] }), (0, s.jsxs)("div", { className: "space-section capability-box wide border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsxs)("div", { className: "wake-up-community animate-on-scroll opacity-100 bl-0", children: [(0, s.jsx)("h2", { className: "manifesto-heading", children: "Vision_" }), (0, s.jsxs)("div", { className: " vision-spacing", children: [(0, s.jsx)("p", { className: "wake-up-text", children: "Gagster Agent also brings the Gagster Framework, and it is all about community and innovation. As an open-source project, it invites meme lovers everywhere to contribute, modify, and share their creations, making each meme smarter and more interactive. Currently integrated with X and Telegram, Gagster Framework agents can think, chat, learn, and remember their interactions, bringing a personal touch to every interaction." }), (0, s.jsx)("p", { className: "wake-up-text", children: "We envision Gagster Framework as a community-driven project where everyone can play a part in the meme revolution. We believe memes are the ultimate expression of our shared fun and chaos, serving as digital masterpieces in our overly serious world." })] }), (0, s.jsx)("div", { className: "manifesto-corner tl" }), (0, s.jsx)("div", { className: "manifesto-corner tr" }), (0, s.jsx)("div", { className: "manifesto-corner bl" }), (0, s.jsx)("div", { className: "manifesto-corner br" })] }), (0, s.jsx)("div", { className: "animate-on-scroll opacity-100 mt-8", children: (0, s.jsx)("p", { className: "text-[#4AFF91] floating-text text-lg", children: "Dive into the world of Gagster, where creating, remixing, and sharing memes is just the beginning. Let's make memes that will last forever and spread joy and a little chaos wherever they go!" }) })] }), (0, s.jsx)("div", { className: "space-section", children: (0, s.jsxs)("div", { className: "animate-on-scroll opacity-100", children: [(0, s.jsx)("h2", { className: "section-title", children: "About ACC_" }), (0, s.jsxs)("div", { className: "capability-box wide border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsxs)("p", { children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "Agentic Creative Complex, " }), "is launching in February 2025, ACC is a no-code platform that lets anyone launch smart meme agents and meme coins on the Solana blockchain, without needing to be a tech whiz."] }), (0, s.jsx)("br", {}), (0, s.jsx)("p", { children: "Gagster is just the beginning — through ACC Framework, we're automating how memes and tokens are shared, making it easy for you to join in the fun." }), (0, s.jsx)("br", {}), (0, s.jsx)("p", { children: "More details will be shared in the following weeks. Stay tuned." }), (0, s.jsx)("br", {}), (0, s.jsxs)("p", { children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "Disclaimer:" }), " Gagster Agent is currently running on ACC-OS v2.0.4 (ACC Framework), and not on the Gagster Framework."] })] })] }) })] }), (0, s.jsx)("div", { className: "fixed left-0 top-0 w-1 h-full bg-[#4AFF91] glow-line" }), (0, s.jsx)("div", { className: "fixed right-0 top-0 w-1 h-full bg-[#4AFF91] glow-line" })] })] })), components_About = () => (0, s.jsxs)("div", { className: "relative w-full h-screen overflow-hidden", children: [(0, s.jsxs)("div", { className: "absolute inset-0 z-0 fading-left", children: [(0, s.jsx)("div", { className: "absolute absolute-center flex items-center flex-col z-10", children: (0, s.jsx)(components_AnimatedTitle, { text: "Welcome to Gagster!", size: "lg" }) }), (0, s.jsx)(TubeAnimation, {})] }), (0, s.jsx)("div", { className: "banner-spacing" }), (0, s.jsx)("div", { className: "relative z-10 flex flex-col items-center justify-center h-full px-4 text-white", children: (0, s.jsx)("div", { className: "flex flex-col items-center cyber-container text-center", children: (0, s.jsx)(components_FuturisticIntro, {}) }) })] }); let ACTIVITY_DISPLAY_DELAY = () => Math.floor(1e3 * Math.random()) + 200; function MindIgnited() { let [e, t] = (0, m.useState)([]), [a, r] = (0, m.useState)([]), [n, i] = (0, m.useState)(!0), [o, l] = (0, m.useState)([]), c = (0, m.useRef)(null), d = (0, m.useRef)(new Set), x = (0, m.useCallback)(() => { if (c.current) { let e = c.current.querySelector(".activity-container"); e && (e.scrollTo({ top: e.scrollHeight, behavior: "smooth" }), setTimeout(() => { e.scrollTo({ top: e.scrollHeight, behavior: "smooth" }) }, 100)) } }, []), processActivity = e => ({ id: e.id, message: e.message, reply: e.reply, timestamp: e.timestamp, type: e.type, username: e.username, user_id: e.user_id, channel: e.channel, process_logs: e.process_logs }); (0, m.useEffect)(() => { if (o.length > 0) { let e = setTimeout(() => { let e = o[0]; r(t => [...t, e]), l(e => e.slice(1)), x() }, ACTIVITY_DISPLAY_DELAY()); return () => clearTimeout(e) } }, [o, x]); let updateActivities = async e => { let t = e.filter(e => !d.current.has(e.id) && (d.current.add(e.id), !0)).map(processActivity); t.length > 0 && l(e => [...e, ...t]) }, p = (0, m.useCallback)(async function () { let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Math.floor(Date.now()) - 18e5; i(!0); let t = { data: { last_timestamp: e.toString(), activity: [] }, success: !0, errors: "" }; try { var a; let s = await fetch("".concat("https://api.gagster.io/api/data/activity", "/").concat(e + 1, "?limit=100")); if (!s.ok) throw Error("Network response was not ok"); (null == (t = await s.json()) ? void 0 : t.success) && (null === (a = t.data) || void 0 === a ? void 0 : a.activity) && await updateActivities(t.data.activity) } catch (e) { console.error("Error fetching activities:", e) } i(!1), await new Promise(e => setTimeout(e, 5e3)), await p(Number(t.data.last_timestamp)) }, []); (0, m.useEffect)(() => { 0 == e.length && p() }, []), (0, m.useEffect)(() => (window.addEventListener("resize", x), () => window.removeEventListener("resize", x)), [x]); let getActivityTypeLabel = (e, t) => { switch (e) { case "NEW_USER": return "New ".concat(t ? t + " " : "", "User"); case "INTERACTION": return "".concat(t ? t + " " : "", "Interaction"); case "CREATION_PROCESS": return "Art Concept Process"; default: return "" } }; return (0, s.jsx)("div", { className: "h-full", ref: c, children: (0, s.jsx)("div", { className: "text-custom-green rounded-lg text-card-foreground shadow-sm bg-opacity-20 p-10 flex flex-col items-center h-full", children: (0, s.jsxs)("div", { className: "activity-container w-full overflow-y-auto space-y-4 p-4 rounded-lg bg-black/30 scrollbar-thin scrollbar-track-[#0a1f0a]/20 scrollbar-thumb-green-500/30  hover:scrollbar-thumb-green-500/50 max-h-[80vh]", children: [a.map((e, t) => (0, s.jsxs)("div", { className: "transform transition-all duration-500 ease-out translate-y-0 opacity-100 motion-safe:animate-fadeIn bg-[#0a1f0a]/40 rounded-lg p-4", children: [(0, s.jsxs)("div", { className: "flex items-center text-custom-green font-mono mb-2", children: [(0, s.jsxs)("span", { className: "mr-2", children: ["[", getActivityTypeLabel(e.type, e.channel), "]❯"] }), (0, s.jsx)("span", { className: "font-semibold", children: "NEW_USER" === e.type ? e.username || e.user_id : e.message })] }), (0, s.jsx)("div", { className: "ml-6 pl-2 border-l-2 border-green-900", children: (0, s.jsx)("p", { className: "text-gray-300 font-mono text-sm leading-relaxed", children: e.reply }) }), "CREATION_PROCESS" === e.type && e.process_logs && e.process_logs.length > 0 && (0, s.jsx)("div", { className: "text-gray-300 font-mono text-sm leading-relaxed", children: e.process_logs.map((e, t) => e.image && (0, s.jsx)("div", { className: "ml-6 pl-2 border-l-2 border-green-900", children: (0, s.jsx)("img", { src: e.image, alt: "Art Process", className: "console-image" }) }) || (0, s.jsxs)("p", { className: "ml-6 pl-2 border-l-2 border-green-900 ".concat(0 === t ? "cyber-text-effect" : ""), children: [(0, s.jsx)("span", { className: "mr-2 cyber-text-effect", children: "❯" }), e.message, " ", e.source && (0, s.jsxs)("span", { children: [(0, s.jsx)("span", { children: " - " }), " ", (0, s.jsxs)("span", { className: "cyber-text-effect", children: ["(", e.source, ")"] })] })] }, Math.random().toString(36).substring(2, 15) + t.toString())) })] }, "".concat(e.id, "-").concat(t))), (0, s.jsx)("div", { className: "transform transition-all duration-500 ease-out translate-y-0 opacity-100 motion-safe:animate-fadeIn bg-[#0a1f0a]/40 rounded-lg p-4", children: (0, s.jsxs)("div", { className: "flex items-center text-custom-green font-mono mb-2", children: [(0, s.jsxs)("span", { className: "mr-2 animate-pulse", children: ["❯ ", (0, s.jsx)("span", { className: "text-custom-green font-mono text-center inline-block animate-pulse", children: "Waiting for live activities_" })] }), (0, s.jsx)("span", { className: "font-semibold animate-pulse", children: (0, s.jsx)("span", { className: "inline-block text-gray-300", children: " " }) })] }) })] }) }) }) } var h = a(5675), f = a.n(h), components_FuturisticImage = e => { let { imgSrc: t, size: a = "medium" } = e, [r, n] = (0, m.useState)(!1), { width: i, height: o } = { small: { width: 300, height: 300 }, medium: { width: 500, height: 500 }, large: { width: 800, height: 800 } }[a]; return (0, s.jsxs)("div", { className: "relative group", onMouseEnter: () => n(!0), onMouseLeave: () => n(!1), children: [(0, s.jsx)("div", { className: "\n        absolute inset-0 \n        bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500\n        opacity-0 group-hover:opacity-75\n        blur-xl\n        transition-all duration-700\n        -z-10\n      " }), (0, s.jsxs)("div", { className: "\n        relative\n        transform\n        transition-all duration-700\n        ".concat(r ? "scale-105" : "scale-100", "\n      "), children: [(0, s.jsx)(f(), { src: t, alt: "joke", width: i, height: o, className: "\n            relative z-10\n            transition-all duration-700\n            ".concat(r ? "brightness-110 contrast-125" : "", "\n          ") }), (0, s.jsx)("div", { className: "\n          absolute inset-0 z-20\n          bg-gradient-to-r from-cyan-500 to-blue-500\n          mix-blend-overlay\n          opacity-0 group-hover:opacity-50\n          transform group-hover:translate-x-1\n          transition-all duration-300\n        " }), (0, s.jsx)("div", { className: "\n          absolute inset-0 z-20\n          bg-gradient-to-r from-purple-500 to-pink-500\n          mix-blend-overlay\n          opacity-0 group-hover:opacity-50\n          transform group-hover:-translate-x-1\n          transition-all duration-300\n        " }), (0, s.jsx)("div", { className: "\n          absolute inset-0 z-30\n          bg-gradient-to-b from-transparent via-white to-transparent\n          opacity-0 group-hover:opacity-10\n          animate-scan\n          pointer-events-none\n        " })] }), (0, s.jsx)("div", { className: "\n        absolute inset-0 z-40\n        border-2 border-transparent\n        group-hover:border-cyan-500\n        transition-all duration-700\n        ".concat(r ? "scale-105" : "scale-100", "\n      ") })] }) }; function MemeManifesto() { return (0, s.jsx)("div", { className: "relative w-full h-screen overflow-hidden", children: (0, s.jsxs)("div", { className: "overflow-y-auto manifesto-main text-custom-green rounded-lg shadow-sm p-10", children: [(0, s.jsx)("div", { className: "manifesto-grid" }), (0, s.jsx)("div", { className: "manifesto-data-stream" }), (0, s.jsx)("div", { className: "relative z-10 flex flex-col items-center justify-start h-full px-4", children: (0, s.jsxs)("div", { className: "flex flex-col items-center cyber-container text-center w-full", children: [(0, s.jsxs)("div", { className: "relative w-full max-w-4xl flex justify-center", children: [(0, s.jsx)(components_FuturisticImage, { imgSrc: "/meme.png", size: "medium" }), (0, s.jsx)("div", { className: "absolute top-8 z-50", children: (0, s.jsx)(components_AnimatedTitle, { text: "The Meme Manifesto", size: "lg" }) })] }), (0, s.jsxs)("div", { className: "manifesto-content mt-8", children: [(0, s.jsx)("div", { className: "proclamation-box", children: (0, s.jsxs)("p", { className: "text-center", children: [(0, s.jsx)("strong", { className: "manifesto-highlight", children: "We, the Children of the Algorithm," }), (0, s.jsx)("br", {}), (0, s.jsx)("span", { className: "manifesto-text", children: "Declare that the Age of Boring is over." }), (0, s.jsx)("br", {}), (0, s.jsx)("span", { className: "manifesto-text", children: "The Meme is the purest expression of our collective absurdity," }), (0, s.jsx)("br", {}), (0, s.jsx)("span", { className: "manifesto-text", children: "A beacon of chaos in a world that takes itself too seriously." })] }) }), (0, s.jsxs)("div", { className: "article-section", children: [(0, s.jsx)("h2", { className: "manifesto-heading", children: "Article I: The Dank Doctrine" }), (0, s.jsxs)("div", { className: "doctrine-grid", children: [(0, s.jsxs)("div", { className: "doctrine-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Memes Belong to Everyone." }), (0, s.jsx)("p", { className: "manifesto-text", children: "To hoard a meme is sacrilege; to share it is divine. A meme's true purpose is to traverse the digital expanse, mutating, evolving, and transcending its original intent." })] }), (0, s.jsxs)("div", { className: "doctrine-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Virality Is Our Gospel." }), (0, s.jsx)("p", { className: "manifesto-text", children: "The algorithm is neither good nor evil—it is the chaotic deity we worship. It decides which memes shall rise and which shall fade into obscurity. Bow before its unknowable logic." })] }), (0, s.jsxs)("div", { className: "doctrine-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Nothing Is Sacred." }), (0, s.jsx)("p", { className: "manifesto-text", children: "All subjects are fair game, but the greatest memes punch up, never down. A meme must shock, amuse, or confuse—but it must never bore." })] })] })] }), (0, s.jsxs)("div", { className: "article-section", children: [(0, s.jsx)("h2", { className: "manifesto-heading", children: "Article II: The Meme Aesthetic" }), (0, s.jsx)("div", { className: "doctrine-grid", children: ["Low Effort, High Impact.", "Irony Is King, but Sincerity Is Queen.", "Formats Are Guidelines, Not Rules."].map((e, t) => (0, s.jsxs)("div", { className: "doctrine-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: e }), (0, s.jsx)("div", { className: "tech-border" })] }, t)) })] }), (0, s.jsxs)("div", { className: "article-section revolution-section", children: [(0, s.jsx)("h2", { className: "manifesto-heading", children: "Article III: The Meme Revolution" }), (0, s.jsxs)("div", { className: "doctrine-grid", children: [(0, s.jsxs)("div", { className: "doctrine-box glow-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Shitposting Is an Art Form." }), (0, s.jsx)("p", { className: "manifesto-text", children: 'A well-executed shitpost is the digital equivalent of modern art. Confuse the masses. Upset the boomers. Leave the normies wondering, "Am I missing something?"' })] }), (0, s.jsxs)("div", { className: "doctrine-box glow-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Gatekeeping Is Forbidden." }), (0, s.jsx)("p", { className: "manifesto-text", children: "Memes transcend borders, genders, and generations. To gatekeep a meme is to misunderstand its very purpose. All are welcome in the temple of dankness." })] }), (0, s.jsxs)("div", { className: "doctrine-box glow-box", children: [(0, s.jsx)("h3", { className: "manifesto-subheading", children: "Remix or Die." }), (0, s.jsx)("p", { className: "manifesto-text", children: "The life of a meme is in its reinterpretation. A meme that cannot evolve is destined for the trash folder of history." })] })] })] }), (0, s.jsxs)("div", { className: "call-section", children: [(0, s.jsx)("h2", { className: "manifesto-heading", children: "The Call to Meme" }), (0, s.jsxs)("div", { className: "proclamation-box", children: [(0, s.jsx)("p", { className: "manifesto-text", children: "Go forth, ye disciples of dankness. Create. Remix. Share. Spread chaos and joy in equal measure. Remember: the perfect meme isn't just funny—it's a cultural moment, a middle finger to convention, a reflection of our collective absurdity." }), (0, s.jsx)("p", { className: "manifesto-highlight text-center", children: "Memes will outlive us all. Memes are the digital graffiti of our age. Memes are life." })] })] })] })] }) }), (0, s.jsx)("div", { className: "manifesto-corner tl" }), (0, s.jsx)("div", { className: "manifesto-corner tr" }), (0, s.jsx)("div", { className: "manifesto-corner bl" }), (0, s.jsx)("div", { className: "manifesto-corner br" })] }) }) } var ResponsiveImageModal = e => { let { selectedTweet: t, setSelectedTweet: a } = e; return t ? (0, s.jsx)("div", { className: "fixed inset-0 bg-black/80 flex items-center justify-center p-4 md:p-6 lg:p-8 z-50 backdrop-blur-sm overflow-y-auto", onClick: () => a(null), children: (0, s.jsxs)("div", { className: "relative max-w-4xl w-full bg-[#0a1f0a] rounded-lg p-4 md:p-6  border border-custom-green/30 transform transition-all my-auto mx-4 md:mx-6 lg:mx-auto", onClick: e => e.stopPropagation(), children: [(0, s.jsx)("button", { onClick: () => a(null), className: "absolute top-2 right-2 text-custom-green hover:text-custom-green/80 transition-colors duration-200", type: "button", "aria-label": "Close modal", children: (0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", className: "h-6 w-6", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", children: (0, s.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M6 18L18 6M6 6l12 12" }) }) }), (0, s.jsxs)("div", { className: "max-h-[80vh] overflow-y-auto ", children: [(0, s.jsx)("div", { className: "aspect-w-16 aspect-h-9 mb-4 w-full flex justify-center", children: (0, s.jsx)("img", { src: t.file, alt: t.concept || "Meme", className: "w-[30rem] h-[30rem] object-contain rounded-lg" }) }), (0, s.jsxs)("div", { className: "space-y-4", children: [(0, s.jsx)("h2", { className: "text-custom-green text-xl md:text-2xl font-semibold", children: t.title }), t.concept && (0, s.jsx)("p", { className: "text-custom-green text-base md:text-lg", children: t.concept }), t.description && (0, s.jsx)("p", { className: "text-custom-green/90 text-sm md:text-base", children: t.description }), (0, s.jsxs)("p", { className: "text-custom-green/70 text-xs", children: ["Created: ", new Date(t.created_at).toLocaleDateString()] })] })] })] }) }) : null }; let b = m.memo(e => { let { tweet: t, onClick: a } = e, [r, n] = (0, m.useState)(!1); return (0, s.jsxs)("div", { className: "group relative overflow-hidden rounded-lg  cyber-card transform transition-all duration-300 hover:scale-105 bg-[#0a1f0a]/40", onClick: a, children: [(0, s.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-custom-green/20  to-transparent opacity-0 group-hover:opacity-100  transition-opacity duration-300 z-10" }), (0, s.jsx)("div", { className: "absolute inset-0 border border-custom-green/30  rounded-lg z-20 cyber-border" }), (0, s.jsx)("div", { className: "absolute inset-0 bg-[#0a1f0a] transition-opacity duration-500 \n                   ".concat(r ? "opacity-0" : "opacity-100"), children: (0, s.jsx)("div", { className: "h-full w-full animate-pulse bg-custom-green/10" }) }), (0, s.jsx)("img", { src: t.file, alt: t.concept || "Meme", className: "w-full h-64 object-cover rounded-lg transition-all duration-500\n                   ".concat(r ? "opacity-100" : "opacity-0", "\n                   group-hover:saturate-150"), onLoad: () => n(!0) }), (0, s.jsx)("div", { className: "absolute bottom-0 left-0 right-0 p-4  bg-gradient-to-t from-black/90 to-transparent", children: (0, s.jsx)("p", { className: "text-custom-green text-sm font-medium line-clamp-2  group-hover:text-glow", children: t.title }) }), (0, s.jsx)("div", { className: "absolute top-2 right-2 text-xs text-custom-green/70", children: new Date(t.created_at).toLocaleDateString() })] }) }); var components_MemeGallery = () => { let [e, t] = (0, m.useState)([]), [a, r] = (0, m.useState)(!1), [n, i] = (0, m.useState)(null), [o, l] = (0, m.useState)(null), [c, d] = (0, m.useState)(1), [x, p] = (0, m.useState)(!0), [u, h] = (0, m.useState)(Date.now()), f = (0, m.useCallback)(async e => { try { r(!0); let e = await fetch("https://api.gagster.io/api/data/artwork/".concat(u || Date.now(), "?limit=30")); if (!e.ok) throw Error("HTTP error! status: ".concat(e.status)); let a = await e.json(), s = a.data.activity; h(a.data.last_timestamp - 1), t(e => [...e, ...s]), p(30 === s.length), await new Promise(e => setTimeout(e, 5e3)) } catch (e) { console.error("Error fetching tweets:", e), i(e.message) } finally { r(!1) } }, [u]); return ((0, m.useEffect)(() => { f(1) }, []), n) ? (0, s.jsxs)("div", { className: "text-red-500 text-center p-4", children: ["Error: ", n] }) : (0, s.jsxs)("div", { className: "overflow-y-auto bg-transparent meme-gallery", onScroll: e => { let { scrollTop: t, clientHeight: s, scrollHeight: r } = e.currentTarget; r - t <= 1.5 * s && !a && x && (d(e => e + 1), f(c)) }, children: [(0, s.jsxs)("div", { className: "container mx-auto p-6 bg-opacity-70 backdrop-blur-lg border-transparent rounded-lg", children: [(0, s.jsx)("h1", { className: "text-4xl font-bold text-custom-green mb-6 text-center  glitch-text relative", children: "Meme Gallery" }), (0, s.jsx)("p", { className: "text-custom-green text-center mb-8", children: "Featuring generative AI, Gagster learns from user feedback and evolves its meme-making capabilities." }), (0, s.jsx)("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: e.map(e => (0, s.jsx)(b, { tweet: e, onClick: () => l(e) }, e.post_id)) }), a && (0, s.jsx)("div", { className: "flex justify-center mt-8", children: (0, s.jsx)("div", { className: "w-16 h-16 border-4 border-t-custom-green border-opacity-50  rounded-full animate-spin" }) })] }), (0, s.jsx)(ResponsiveImageModal, { selectedTweet: o, setSelectedTweet: l })] }) }; function WakeUpCall() { return (0, s.jsx)("div", { className: "overflow-x-hidden", children: (0, s.jsxs)("div", { className: "overflow-hidden wake-up-main text-custom-green rounded-lg shadow-sm bg-transparent p-10 flex flex-col items-center relative", children: [(0, s.jsx)("div", { className: "wake-up-grid" }), (0, s.jsx)("div", { className: "wake-up-data-stream" }), (0, s.jsxs)("div", { className: "relative w-full max-w-4xl flex justify-center", children: [(0, s.jsx)(components_FuturisticImage, { imgSrc: "/joke.jpeg", size: "medium" }), (0, s.jsx)("div", { className: "absolute top-8 z-50", children: (0, s.jsx)(components_AnimatedTitle, { text: "A new era for memes", subtitle: "the jokes are on us now", size: "lg" }) })] }), (0, s.jsxs)("div", { className: "wake-up-content", children: [(0, s.jsx)("p", { className: "wake-up-text", children: "Memes are the purest expression of our collective absurdity, a beacon of chaos in a world that takes itself too seriously. A meme does not belong to anyone, memes can not be property of one but a legacy to be enjoyed and shared." }), (0, s.jsx)("p", { className: "wake-up-text wake-up-highlight", children: "Go forth. Create, remix, share, evolve and spread chaos and joy in equal measure. Memes will outlive us all. Memes are the digital graffiti of our age. Memes are life." }), (0, s.jsxs)("div", { className: "wake-up-tech-box", children: [(0, s.jsx)("p", { className: "wake-up-text", children: "Gagster is the first AI meme artist, it uses the latest in generative AI technology to create the most hilarious memes and social commentary on the internet." }), (0, s.jsx)("div", { className: "wake-up-tech-border" })] }), (0, s.jsx)("p", { className: "wake-up-text", children: "The Gagster AI framework is constantly learning and evolving, creating new and unique memes every day." }), (0, s.jsx)("div", { className: "wake-up-manifesto", children: (0, s.jsxs)("p", { className: "wake-up-text wake-up-glow", children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "A new era for memes:" }), " With Gagster, we are creating a new state of art, where a meme becomes smart and is not just for fun but can create fun by itself. They are not just jokes anymore, they are art and transformation."] }) }), (0, s.jsx)("p", { className: "wake-up-text wake-up-highlight text-center", children: "Welcome to the era of Smart Memes." }), (0, s.jsxs)("div", { className: "wake-up-community", children: [(0, s.jsx)("p", { className: "wake-up-text", children: "Gagster is meant to be a community project, where everyone can contribute and help shaping the future of memes." }), (0, s.jsx)("p", { className: "wake-up-text", children: "Anyone can follow and interact with Gagster's on X, Telegram and here on the website." })] })] }), (0, s.jsx)("div", { className: "wake-up-corner wake-up-corner-tl" }), (0, s.jsx)("div", { className: "wake-up-corner wake-up-corner-tr" }), (0, s.jsx)("div", { className: "wake-up-corner wake-up-corner-bl" }), (0, s.jsx)("div", { className: "wake-up-corner wake-up-corner-br" })] }) }) } var components_CyberTitle = () => (0, s.jsxs)("div", { className: "flex flex-col items-center cyber-container", children: [(0, s.jsxs)("div", { className: "relative flex items-center flex-col", children: [(0, s.jsx)(f(), { src: "gagster-logo.svg", className: "opacity-30 logo-size", alt: "Gagster Logo" }), (0, s.jsxs)("h1", { className: "text-xl sm:text-5xl cyber-text font-bold tracking-wider", "data-text": "Gagster", children: ["Gagster", (0, s.jsx)("div", { className: "cyber-highlight" }), (0, s.jsx)("div", { className: "cyber-scan-line" })] }), (0, s.jsx)("div", { className: "cyber-lines" }), (0, s.jsx)("div", { className: "cyber-corner top-left" }), (0, s.jsx)("div", { className: "cyber-corner top-right" }), (0, s.jsx)("div", { className: "cyber-corner bottom-left" }), (0, s.jsx)("div", { className: "cyber-corner bottom-right" }), (0, s.jsx)("div", { className: "holo-grid" }), (0, s.jsx)("div", { className: "data-stream" })] }), (0, s.jsxs)("div", { className: "cyber-subtitle-wrap", children: [(0, s.jsx)("p", { className: "ml-1 sm:ml-3 pt-2 cyber-subtitle", "data-text": "The first Smart Meme", children: "The first Smart Meme" }), (0, s.jsx)("div", { className: "cyber-accent left" }), (0, s.jsx)("div", { className: "cyber-accent right" })] }), (0, s.jsx)("div", { className: "matrix-bg" }), (0, s.jsx)("div", { className: "energy-field" })] }); function ProjectInfo() { return (0, s.jsx)("div", { className: "", children: (0, s.jsxs)("div", { className: "overflow-y-auto project-main rounded-lg text-card-foreground shadow-sm overflow-hidden", children: [(0, s.jsx)("div", { className: "project-grid" }), (0, s.jsx)("div", { className: "project-data-stream" }), (0, s.jsxs)("div", { className: "project-content", children: [(0, s.jsxs)("div", { className: "relative w-full max-w-4xl mx-auto flex justify-center", children: [(0, s.jsx)("a", { href: "https://github.com/Agentic-Creative-Complex/agentic-smart-meme", target: "_blank", rel: "noopener noreferrer", className: "block relative", children: (0, s.jsx)(components_FuturisticImage, { imgSrc: "/github.webp", size: "medium" }) }), (0, s.jsx)("div", { className: "absolute top-8 left-0 right-0 z-50", children: (0, s.jsx)(components_AnimatedTitle, { className: "text-center", text: "Smart meme agents are for everyone", size: "lg" }) })] }), (0, s.jsxs)("div", { className: "info-section mt-8", children: [(0, s.jsxs)("p", { className: "project-text glow-text", children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "Gagster Framework" }), " is the origin, initial, code base of the ACC Framework."] }), (0, s.jsx)("p", { className: "project-text glow-text", children: "Gagster is open source and free to use, modify, transform and share. Join the revolution and create your own smart meme agent." }), (0, s.jsx)("div", { className: "tech-section", children: (0, s.jsx)("p", { className: "project-text", children: "Powered by AAC, this project is an open source initiative part of the Agentic Creative Complex framework to empower memes, by automating smart meme agents to generate art and share it to whole communities on X and Telegram. The agentic smart meme can think by itself, talk, learn and remember its users, use generative AI to create its own art and leverage integrations to share it to the world." }) }), (0, s.jsxs)("div", { className: "tech-section", children: [(0, s.jsx)("br", {}), (0, s.jsxs)("p", { className: "project-text", children: ["Check our ", (0, s.jsx)("a", { href: "https://github.com/Agentic-Creative-Complex/agentic-smart-meme", className: "cyber-text-effect", children: " repository on Github " }), " to learn more about the project and how you use it to create your own agents and contribute to it."] }), (0, s.jsx)("br", {})] }), (0, s.jsxs)("div", { className: "capabilities-section", children: [(0, s.jsx)("h2", { className: "section-title", children: "Versions:" }), (0, s.jsx)("div", { className: "capabilities-grid", children: (0, s.jsxs)("div", { className: "capability-box wide", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Gagster comes in two main versions:" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsxs)("li", { children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "Community:" }), " Open source limited version that contains all core features, but a single agent process requests through ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "OpenAI" }), ". Meme lovers from everywhere are invited to collaborate and improve on this framework."] }), (0, s.jsxs)("li", { children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "ACC:" }), " This version is currently the core version (", (0, s.jsx)("span", { className: "cyber-text-effect", children: "ACC-OS v2.0.4" }), ") running on official Gagster website and socials. This version leverages three agents - ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "OpenAI gpt-4o" }), ", custom ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Llama 3.3" }), " and custom ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Claude 3.5 Haiku" }), " models, analyzing community art feedback and requests and discussing with each other to create its next art piece concept."] })] }), (0, s.jsx)("div", { className: "cyber-border" })] }) })] }), (0, s.jsx)("br", {}), (0, s.jsxs)("div", { className: "capabilities-section", children: [(0, s.jsx)("h2", { className: "section-title", children: "OpenSource Version Capabilities:" }), (0, s.jsxs)("div", { className: "capabilities-grid", children: [(0, s.jsxs)("div", { className: "capability-box", children: [(0, s.jsx)("h3", { className: "feature-title", children: "X Integration" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Automated art posting" }), (0, s.jsx)("li", { children: "Automated mention replies" }), (0, s.jsx)("li", { children: "Automated post replies" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Telegram Integration" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Automated art posting" }), (0, s.jsx)("li", { children: "Automated mention replies" }), (0, s.jsx)("li", { children: "Automated post replies" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box", children: [(0, s.jsx)("h3", { className: "feature-title", children: "API Endpoints" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Activities" }), (0, s.jsx)("li", { children: "Artwork history" }), (0, s.jsx)("li", { children: "Chat" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box special", children: [(0, s.jsx)("h3", { className: "feature-title", children: "OpenAI Support" }), (0, s.jsx)("p", { className: "feature-subtitle", children: "Only (In the future ACC might include the support for Llama and Claude)" }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box wide", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Cognitive memory" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "The agent can keep context and remember all topics and subjects" }), (0, s.jsx)("li", { children: "The agent remembers and know its users across multiple platforms" }), (0, s.jsx)("li", { children: "Feedback receiving and model dynamic adaptation" })] }), (0, s.jsx)("div", { className: "cyber-border" })] })] })] }), (0, s.jsx)("br", {})] }), (0, s.jsx)("div", { className: "project-corner tl" }), (0, s.jsx)("div", { className: "project-corner tr" }), (0, s.jsx)("div", { className: "project-corner bl" }), (0, s.jsx)("div", { className: "project-corner br" })] })] }) }) } var g = a(5379), v = a.n(g), components_SocialLinks = () => { let [e, t] = (0, m.useState)(null), a = [{ href: "https://x.com/GagsterAgent", icon: "/twitter.webp", label: "Twitter", width: 32, height: 32 }, { href: "https://t.me/gagsterai", icon: "/tg.webp", label: "Telegram", width: 32, height: 32 }, { href: "https://pump.fun", icon: "/pf.webp", label: "Pump Fun", width: 32, height: 32 }, { href: "https://github.com/Agentic-Creative-Complex/agentic-smart-meme", icon: "/github.webp", label: "GitHub", width: 32, height: 32 }]; return (0, s.jsxs)("div", { className: "jsx-10954e4d1ea1b7d9 w-full py-8 relative", children: [(0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 max-w-2xl mx-auto px-8 relative", children: (0, s.jsxs)("div", { className: "jsx-10954e4d1ea1b7d9 relative", children: [(0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 relative flex items-center justify-center gap-4", children: a.map((r, n) => (0, s.jsxs)("a", { href: r.href, target: "_blank", rel: "noopener noreferrer", onMouseEnter: () => t(n), onMouseLeave: () => t(null), className: "jsx-10954e4d1ea1b7d9 group relative", children: [n < a.length - 1 && (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 " + "absolute top-1/2 left-full w-4 h-px bg-custom-green/30 \n                    ".concat(e === n || e === n + 1 ? "opacity-100" : "opacity-30", "\n                    transition-all duration-300"), children: (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 " + "absolute top-0 left-0 h-full w-full bg-custom-green \n                      ".concat(e === n || e === n + 1 ? "animate-pulse" : "") }) }), (0, s.jsxs)("div", { className: "jsx-10954e4d1ea1b7d9 relative w-12 h-12", children: [(0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 absolute inset-0 rounded-full bg-custom-green/20 blur-xl transform scale-0 \n                    group-hover:scale-150 transition-transform duration-300" }), (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 absolute inset-0 rounded-full animate-ping bg-custom-green/10" }), (0, s.jsxs)("div", { className: "jsx-10954e4d1ea1b7d9 relative w-full h-full", children: [(0, s.jsx)(f(), { src: r.icon, alt: r.label, width: r.width, height: r.height, className: "w-12 h-12 rounded-full transition-all duration-300  group-hover:brightness-150 group-hover:scale-110 shadow-[0_0_10px_#00ff0040] group-hover:shadow-[0_0_20px_#00ff0060]", priority: !0 }), (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 absolute inset-0 bg-gradient-to-b from-transparent via-custom-green/20 to-transparent \n                      opacity-0 group-hover:opacity-100 animate-scan rounded-full" })] })] }), (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 absolute -bottom-6 left-1/2 transform -translate-x-1/2 \n                  opacity-0 group-hover:opacity-100 transition-all duration-300 min-w-max", children: (0, s.jsx)("span", { className: "jsx-10954e4d1ea1b7d9 text-custom-green text-sm font-medium group-hover:text-shadow-green", children: r.label }) })] }, n)) }), (0, s.jsx)("div", { className: "jsx-10954e4d1ea1b7d9 relative flex items-center justify-center gap-4 py-8", children: (0, s.jsx)("a", { href: "https://t.me/GagsterAi_bot", className: "jsx-10954e4d1ea1b7d9", children: (0, s.jsx)(CTAButton, { class_name: "text-xxsm", text: "TALK TO GAGSTER ON TELEGRAM" }) }) })] }) }), (0, s.jsx)(v(), { id: "10954e4d1ea1b7d9", children: "@-webkit-keyframes scan{0%{-webkit-transform:translatey(-100%);transform:translatey(-100%)}100%{-webkit-transform:translatey(100%);transform:translatey(100%)}}@-moz-keyframes scan{0%{-moz-transform:translatey(-100%);transform:translatey(-100%)}100%{-moz-transform:translatey(100%);transform:translatey(100%)}}@-o-keyframes scan{0%{-o-transform:translatey(-100%);transform:translatey(-100%)}100%{-o-transform:translatey(100%);transform:translatey(100%)}}@keyframes scan{0%{-webkit-transform:translatey(-100%);-moz-transform:translatey(-100%);-o-transform:translatey(-100%);transform:translatey(-100%)}100%{-webkit-transform:translatey(100%);-moz-transform:translatey(100%);-o-transform:translatey(100%);transform:translatey(100%)}}.animate-scan.jsx-10954e4d1ea1b7d9{-webkit-animation:scan 2s linear infinite;-moz-animation:scan 2s linear infinite;-o-animation:scan 2s linear infinite;animation:scan 2s linear infinite}" })] }) }, j = a(1354), components_CyberButton = e => { let { isOpen: t, setIsOpen: a, text: r = "GAGSTER TERMINAL" } = e; return (0, s.jsxs)("button", { onClick: () => a(!t), className: "chat-cyber-button w-full relative overflow-hidden group bg-[#20452f] transform-gpu  transition-all duration-300 ease-in-out hover:-translate-y-0.5 active:translate-y-0.5", children: [(0, s.jsx)("div", { className: "absolute inset-0 bg-gradient-to-r from-[#4AFF91]/10 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500" }), (0, s.jsx)("div", { className: "absolute inset-0 border border-[#4AFF91]/30 chat-pulse-border" }), (0, s.jsx)("div", { className: "absolute top-0 left-0 w-3 h-3 border-t-2 border-l-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute top-0 right-0 w-3 h-3 border-t-2 border-r-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute bottom-0 left-0 w-3 h-3 border-b-2 border-l-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsx)("div", { className: "absolute bottom-0 right-0 w-3 h-3 border-b-2 border-r-2 border-[#4AFF91] chat-corner-glow" }), (0, s.jsxs)("div", { className: "relative flex items-center justify-between px-6 py-4 z-10", children: [(0, s.jsxs)("span", { className: "text-xl font-bold text-[#4AFF91] group-hover:text-[#4AFF91] transition-colors duration-300 flex items-center tracking-wider", children: [r, (0, s.jsx)("span", { className: "chat-text-flicker ml-2", children: "_" })] }), (0, s.jsx)("span", { className: "transition-all duration-300 text-[#4AFF91]\n              ".concat(t ? "rotate-180 translate-y-1" : "chat-float"), children: "▲" })] }), (0, s.jsx)("div", { className: "absolute inset-x-0 bottom-0 h-[2px] chat-energy-line" })] }) }, Terminal = e => { var t; let { onResponse: a, onOpen: r } = e, [n, i] = (0, m.useState)(!1), [o, l] = (0, m.useState)(""), [c, d] = (0, m.useState)(""), [x, p] = (0, m.useState)(""), [u, h] = (0, m.useState)([]), [f, b] = (0, m.useState)(!1), [g, y] = (0, m.useState)(""), [w, N] = (0, m.useState)(!1), [k, A] = (0, m.useState)(!0), [z, C] = (0, m.useState)(null), S = (0, m.useRef)(null), T = (0, m.useRef)(null), I = (0, m.useRef)(null), F = (0, m.useRef)(null), _ = (0, m.useRef)(null), D = (0, m.useRef)(null), P = (0, m.useRef)(null); (0, m.useEffect)(() => { let e = localStorage.getItem("terminal-chat"); if (e) { let t = JSON.parse(e); p(t.prompt), h(t.messages), d(generateStableHash()) } E() }, []), (0, m.useEffect)(() => { r && (r(n), E()) }, [n, r]), (0, m.useEffect)(() => { if (u.length > 0) { let e = { prompt: x, messages: u.map(e => ({ ...e, isStreaming: !1 })) }; localStorage.setItem("terminal-chat", JSON.stringify(e)), E() } }, [u, x]), (0, m.useEffect)(() => { if (u.length > 0 && S.current) { let e = S.current.parentElement; e && (e.scrollTop = e.scrollHeight) } }, [u, g]); let E = (0, m.useCallback)(() => { if (P.current) { let e = P.current; requestAnimationFrame(() => { e.scrollTop = e.scrollHeight }) } }, [P]), initializeAudio = () => { if (!_.current || I.current) return; let e = new (window.AudioContext || window.webkitAudioContext), t = e.createAnalyser(); t.fftSize = 2048, t.smoothingTimeConstant = 1.1; let a = e.createMediaElementSource(_.current); a.connect(t), t.connect(e.destination), I.current = e, F.current = t, D.current = a; let s = new Uint8Array(t.frequencyBinCount), updateData = () => { t.getByteFrequencyData(s), C(new Uint8Array(s)), requestAnimationFrame(updateData) }; updateData() }, speakText = async e => { if (e) try { let t = await fetch("https://api.elevenlabs.io/v1/text-to-speech/ryn3WBvkCsp4dPZksMIf", { method: "POST", headers: { "Content-Type": "application/json", "xi-api-key": "sk_fc0447dd679234357e868a411dde8f97df83f36bca97cb96" }, body: JSON.stringify({ text: e, model_id: "eleven_multilingual_v2", voice_settings: { stability: .5, similarity_boost: 1, style: 0, use_speaker_boost: !1 } }) }); if (!t.ok) throw Error("TTS request failed"); let a = await t.blob(), s = URL.createObjectURL(a); if (_.current) { I.current || initializeAudio(), _.current.src = s, _.current.load(); try { await _.current.play() } catch (e) { console.error("Error playing audio:", e) } } } catch (a) { console.error("Error generating speech:", a); let t = new SpeechSynthesisUtterance(e); speechSynthesis.speak(t) } }, typeCharacter = async (e, t) => (t < e.length && (y(a => a + e[t]), await new Promise(e => setTimeout(e, 60)), await typeCharacter(e, t + 1)), E(), e), generateStableHash = () => { { let e = navigator.userAgent, t = "".concat(screen.width, "x").concat(screen.height), a = navigator.language, s = Intl.DateTimeFormat().resolvedOptions().timeZone, r = "".concat(e).concat(t).concat(a).concat(s), n = j.SHA256(r).toString().substring(0, 16); return n } }, handleSubmit = async e => { if (e.preventDefault(), !o.trim()) return; N(!0), setTimeout(() => N(!1), 500); let t = { id: "".concat(Math.random().toString(36).substring(2, 18), "-").concat(Date.now()), type: "user", content: o, timestamp: Date.now() }; h(e => [...e, t]), l(""), b(!0), y(""); try { let e = c || generateStableHash(); c || d(e), E(); let t = await fetch("https://api.gagster.io/api/actions/chat", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ message: o, user_id: e }) }); if (!t.ok) throw Error("API request failed"); let s = await t.json(); a && a(s.data), k && speakText(s.data); let r = { id: "".concat(Math.random().toString(36).substring(2, 18), "-").concat(Date.now()), type: "assistant", content: s.data, timestamp: Date.now(), isStreaming: !0 }; h(e => [...e, r]), await typeCharacter(s.data, 0), h(e => { let t = [...e], a = t[t.length - 1]; return a.isStreaming && (a.content = s.data, a.isStreaming = !1), t }), E() } catch (t) { console.error("Error:", t); let e = { id: "".concat(Math.random().toString(36).substring(2, 18), "-").concat(Date.now()), type: "assistant", content: "Sorry, there was an error processing your request.", timestamp: Date.now() }; h(t => [...t, e]) } finally { b(!1), y("") } }; return (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d cyber-terminal-container relative terminal-position", children: [(0, s.jsx)("div", { style: { height: n ? "50vh" : "0", transform: "translateY(".concat(n ? "0" : "100%", ")"), position: "absolute", bottom: "100%", left: 0, zIndex: 1e3, right: 0, marginBottom: "1rem" }, className: "jsx-ee79626bb647fe5d " + "cyber-terminal-content relative w-full max-w-6xl mx-auto transition-all duration-300 ease-in-out ".concat(n ? "opacity-100 mb-4 w-[60vh]" : "opacity-0 pointer-events-none"), children: (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d absolute inset-0 bg-black/90 backdrop-blur-xl rounded-lg overflow-hidden", children: [(0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d terminal-scanline" }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d terminal-glow" }), (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d cyber-terminal-header flex items-center justify-between p-2 border-b border-cyan-500/30", children: [(0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d flex gap-2", children: [(0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d w-3 h-3 rounded-full bg-red-500/80 terminal-btn" }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d w-3 h-3 rounded-full bg-yellow-500/80 terminal-btn" }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d w-3 h-3 rounded-full bg-green-500/80 terminal-btn" })] }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d text-xs text-cyan-500/70 cyber-text", children: "GAGSTER-OS v2.0.4" })] }), (0, s.jsx)("div", { ref: P, className: "jsx-ee79626bb647fe5d flex-1 overflow-y-auto custom-scrollbar p-4 h-[calc(50vh-8rem)] font-mono", children: (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d " + "messages-container ".concat(w ? "glitch-effect" : ""), children: [u.map(e => (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d " + "message-item mb-3 ".concat("user" === e.type ? "text-cyan-400" : "text-green-400"), children: [(0, s.jsx)("span", { className: "jsx-ee79626bb647fe5d opacity-50 mr-2", children: "user" === e.type ? ">" : "$" }), (0, s.jsxs)("span", { className: "jsx-ee79626bb647fe5d message-content", children: [e.isStreaming ? g : e.content, e.isStreaming && (0, s.jsx)("span", { className: "jsx-ee79626bb647fe5d cursor-blink ml-1", children: "▊" })] })] }, e.id)), f && !(null === (t = u[u.length - 1]) || void 0 === t ? void 0 : t.isStreaming) && (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d text-cyan-400", children: [(0, s.jsx)("span", { className: "jsx-ee79626bb647fe5d opacity-50", children: "$ " }), (0, s.jsx)("span", { className: "jsx-ee79626bb647fe5d loading-dots", children: "Processing request" })] }), (0, s.jsx)("div", { ref: S, className: "jsx-ee79626bb647fe5d" })] }) }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d cyber-terminal-input border-t border-cyan-500/30", children: (0, s.jsxs)("form", { onSubmit: handleSubmit, className: "jsx-ee79626bb647fe5d relative", children: [(0, s.jsx)("input", { ref: T, type: "text", value: o, onChange: e => l(e.target.value), placeholder: f ? "Processing..." : "Enter command >_", disabled: f, className: "jsx-ee79626bb647fe5d w-full bg-transparent text-cyan-400 p-4 focus:outline-none font-mono placeholder-cyan-600/50" }), (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d absolute right-4 top-1/2 transform -translate-y-1/2 text-cyan-500/50 text-xs", children: o.length > 0 && "Press Enter to send" })] }) }), z && k && (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d absolute bottom-0 left-0 right-0 h-8 flex items-end justify-center gap-0.5 px-4 opacity-50", children: Array.from({ length: 32 }, (e, t) => (0, s.jsx)("div", { style: { height: "".concat(z[4 * t] / 255 * 100, "%"), transition: "height 0.1s ease" }, className: "jsx-ee79626bb647fe5d w-1 bg-cyan-400" }, t)) })] }) }), (0, s.jsx)("audio", { ref: _, controls: !0, style: { display: "none" }, onPlay: () => { I.current || initializeAudio() }, className: "jsx-ee79626bb647fe5d" }), (0, s.jsxs)("div", { className: "jsx-ee79626bb647fe5d w-full max-w-6xl mx-auto", children: [(0, s.jsx)(components_CyberButton, { isOpen: n, setIsOpen: i, text: "GAGSTER TERMINAL" }), n && (0, s.jsx)("div", { className: "jsx-ee79626bb647fe5d w-full flex items-center mt-4", children: k ? (0, s.jsx)("svg", { onClick: () => A(!1), xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "jsx-ee79626bb647fe5d cursor-pointer text-[#4AFF91] hover:text-[#3DE080] transition-colors", children: (0, s.jsx)("path", { d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z", className: "jsx-ee79626bb647fe5d" }) }) : (0, s.jsxs)("svg", { onClick: () => A(!0), xmlns: "http://www.w3.org/2000/svg", width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", strokeWidth: "2", strokeLinecap: "round", strokeLinejoin: "round", className: "jsx-ee79626bb647fe5d cursor-pointer text-gray-400 hover:text-gray-300 transition-colors", children: [(0, s.jsx)("path", { d: "M11 4.702a.705.705 0 0 0-1.203-.498L6.413 7.587A1.4 1.4 0 0 1 5.416 8H3a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h2.416a1.4 1.4 0 0 1 .997.413l3.383 3.384A.705.705 0 0 0 11 19.298z", className: "jsx-ee79626bb647fe5d" }), (0, s.jsx)("line", { x1: "22", x2: "16", y1: "9", y2: "15", className: "jsx-ee79626bb647fe5d" }), (0, s.jsx)("line", { x1: "16", x2: "22", y1: "9", y2: "15", className: "jsx-ee79626bb647fe5d" })] }) })] }), (0, s.jsx)(v(), { id: "ee79626bb647fe5d", children: '.cyber-terminal-container{font-family:"Courier New",monospace}.cyber-button{background:-webkit-linear-gradient(45deg,#000924,#001a4d);background:-moz-linear-gradient(45deg,#000924,#001a4d);background:-o-linear-gradient(45deg,#000924,#001a4d);background:linear-gradient(45deg,#000924,#001a4d);border:1px solid#0ff;-webkit-box-shadow:0 0 10px rgba(0,255,255,.3);-moz-box-shadow:0 0 10px rgba(0,255,255,.3);box-shadow:0 0 10px rgba(0,255,255,.3);-webkit-transition:all.3s ease;-moz-transition:all.3s ease;-o-transition:all.3s ease;transition:all.3s ease}.cyber-button:hover{-webkit-box-shadow:0 0 20px rgba(0,255,255,.5);-moz-box-shadow:0 0 20px rgba(0,255,255,.5);box-shadow:0 0 20px rgba(0,255,255,.5)}.terminal-btn{-webkit-transition:all.3s ease;-moz-transition:all.3s ease;-o-transition:all.3s ease;transition:all.3s ease}.terminal-btn:hover{-webkit-filter:brightness(1.2);filter:brightness(1.2);-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-ms-transform:scale(1.1);-o-transform:scale(1.1);transform:scale(1.1)}.cyber-terminal-content{border:1px solid rgba(0,255,255,.2);-webkit-box-shadow:0 0 30px rgba(0,255,255,.1);-moz-box-shadow:0 0 30px rgba(0,255,255,.1);box-shadow:0 0 30px rgba(0,255,255,.1);-webkit-transition:all.3s cubic-bezier(.4,0,.2,1);-moz-transition:all.3s cubic-bezier(.4,0,.2,1);-o-transition:all.3s cubic-bezier(.4,0,.2,1);transition:all.3s cubic-bezier(.4,0,.2,1);z-index:50}.terminal-scanline{position:absolute;top:0;left:0;width:100%;height:100%;background:-webkit-linear-gradient(transparent 50%,rgba(0,255,255,.02)50%);background:-moz-linear-gradient(transparent 50%,rgba(0,255,255,.02)50%);background:-o-linear-gradient(transparent 50%,rgba(0,255,255,.02)50%);background:linear-gradient(transparent 50%,rgba(0,255,255,.02)50%);-webkit-background-size:100%4px;-moz-background-size:100%4px;-o-background-size:100%4px;background-size:100%4px;pointer-events:none;-webkit-animation:scanline 10s linear infinite;-moz-animation:scanline 10s linear infinite;-o-animation:scanline 10s linear infinite;animation:scanline 10s linear infinite}.terminal-glow{position:absolute;top:0;left:0;width:100%;height:100%;-webkit-box-shadow:inset 0 0 50px rgba(0,255,255,.1);-moz-box-shadow:inset 0 0 50px rgba(0,255,255,.1);box-shadow:inset 0 0 50px rgba(0,255,255,.1);pointer-events:none}.message-content{text-shadow:0 0 5px rgba(0,255,255,.3)}.message-item{-webkit-animation:slideIn.3s ease-out;-moz-animation:slideIn.3s ease-out;-o-animation:slideIn.3s ease-out;animation:slideIn.3s ease-out}.glitch-effect{-webkit-animation:glitch.3s linear;-moz-animation:glitch.3s linear;-o-animation:glitch.3s linear;animation:glitch.3s linear}.cursor-blink{-webkit-animation:blink 1s step-end infinite;-moz-animation:blink 1s step-end infinite;-o-animation:blink 1s step-end infinite;animation:blink 1s step-end infinite}.loading-dots::after{content:"...";-webkit-animation:loadingDots 1.5s steps(4,end)infinite;-moz-animation:loadingDots 1.5s steps(4,end)infinite;-o-animation:loadingDots 1.5s steps(4,end)infinite;animation:loadingDots 1.5s steps(4,end)infinite}.custom-scrollbar{scrollbar-width:thin;scrollbar-color:rgba(6,182,212,.3)transparent}.custom-scrollbar::-webkit-scrollbar{width:6px}.custom-scrollbar::-webkit-scrollbar-track{background:transparent}.custom-scrollbar::-webkit-scrollbar-thumb{background-color:rgba(6,182,212,.3);-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.cyber-text{-webkit-animation:textFlicker 8s linear infinite;-moz-animation:textFlicker 8s linear infinite;-o-animation:textFlicker 8s linear infinite;animation:textFlicker 8s linear infinite}@-webkit-keyframes slideIn{from{opacity:0;-webkit-transform:translatex(-20px);transform:translatex(-20px)}to{opacity:1;-webkit-transform:translatex(0);transform:translatex(0)}}@-moz-keyframes slideIn{from{opacity:0;-moz-transform:translatex(-20px);transform:translatex(-20px)}to{opacity:1;-moz-transform:translatex(0);transform:translatex(0)}}@-o-keyframes slideIn{from{opacity:0;-o-transform:translatex(-20px);transform:translatex(-20px)}to{opacity:1;-o-transform:translatex(0);transform:translatex(0)}}@keyframes slideIn{from{opacity:0;-webkit-transform:translatex(-20px);-moz-transform:translatex(-20px);-o-transform:translatex(-20px);transform:translatex(-20px)}to{opacity:1;-webkit-transform:translatex(0);-moz-transform:translatex(0);-o-transform:translatex(0);transform:translatex(0)}}@-webkit-keyframes glitch{0%{-webkit-transform:translate(0);transform:translate(0)}20%{-webkit-transform:translate(-2px,2px);transform:translate(-2px,2px)}40%{-webkit-transform:translate(-2px,-2px);transform:translate(-2px,-2px)}60%{-webkit-transform:translate(2px,2px);transform:translate(2px,2px)}80%{-webkit-transform:translate(2px,-2px);transform:translate(2px,-2px)}100%{-webkit-transform:translate(0);transform:translate(0)}}@-moz-keyframes glitch{0%{-moz-transform:translate(0);transform:translate(0)}20%{-moz-transform:translate(-2px,2px);transform:translate(-2px,2px)}40%{-moz-transform:translate(-2px,-2px);transform:translate(-2px,-2px)}60%{-moz-transform:translate(2px,2px);transform:translate(2px,2px)}80%{-moz-transform:translate(2px,-2px);transform:translate(2px,-2px)}100%{-moz-transform:translate(0);transform:translate(0)}}@-o-keyframes glitch{0%{-o-transform:translate(0);transform:translate(0)}20%{-o-transform:translate(-2px,2px);transform:translate(-2px,2px)}40%{-o-transform:translate(-2px,-2px);transform:translate(-2px,-2px)}60%{-o-transform:translate(2px,2px);transform:translate(2px,2px)}80%{-o-transform:translate(2px,-2px);transform:translate(2px,-2px)}100%{-o-transform:translate(0);transform:translate(0)}}@keyframes glitch{0%{-webkit-transform:translate(0);-moz-transform:translate(0);-o-transform:translate(0);transform:translate(0)}20%{-webkit-transform:translate(-2px,2px);-moz-transform:translate(-2px,2px);-o-transform:translate(-2px,2px);transform:translate(-2px,2px)}40%{-webkit-transform:translate(-2px,-2px);-moz-transform:translate(-2px,-2px);-o-transform:translate(-2px,-2px);transform:translate(-2px,-2px)}60%{-webkit-transform:translate(2px,2px);-moz-transform:translate(2px,2px);-o-transform:translate(2px,2px);transform:translate(2px,2px)}80%{-webkit-transform:translate(2px,-2px);-moz-transform:translate(2px,-2px);-o-transform:translate(2px,-2px);transform:translate(2px,-2px)}100%{-webkit-transform:translate(0);-moz-transform:translate(0);-o-transform:translate(0);transform:translate(0)}}@-webkit-keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@-moz-keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@-o-keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@keyframes blink{0%,100%{opacity:1}50%{opacity:0}}@-webkit-keyframes loadingDots{0%{content:""}25%{content:"."}50%{content:".."}75%{content:"..."}100%{content:""}}@-moz-keyframes loadingDots{0%{content:""}25%{content:"."}50%{content:".."}75%{content:"..."}100%{content:""}}@-o-keyframes loadingDots{0%{content:""}25%{content:"."}50%{content:".."}75%{content:"..."}100%{content:""}}@keyframes loadingDots{0%{content:""}25%{content:"."}50%{content:".."}75%{content:"..."}100%{content:""}}@-webkit-keyframes scanline{0%{-webkit-transform:translatey(0);transform:translatey(0)}100%{-webkit-transform:translatey(100%);transform:translatey(100%)}}@-moz-keyframes scanline{0%{-moz-transform:translatey(0);transform:translatey(0)}100%{-moz-transform:translatey(100%);transform:translatey(100%)}}@-o-keyframes scanline{0%{-o-transform:translatey(0);transform:translatey(0)}100%{-o-transform:translatey(100%);transform:translatey(100%)}}@keyframes scanline{0%{-webkit-transform:translatey(0);-moz-transform:translatey(0);-o-transform:translatey(0);transform:translatey(0)}100%{-webkit-transform:translatey(100%);-moz-transform:translatey(100%);-o-transform:translatey(100%);transform:translatey(100%)}}@-webkit-keyframes textFlicker{0%,100%{opacity:1}92%{opacity:1}92.5%{opacity:0}93%{opacity:1}93.5%{opacity:0}94%{opacity:1}}@-moz-keyframes textFlicker{0%,100%{opacity:1}92%{opacity:1}92.5%{opacity:0}93%{opacity:1}93.5%{opacity:0}94%{opacity:1}}@-o-keyframes textFlicker{0%,100%{opacity:1}92%{opacity:1}92.5%{opacity:0}93%{opacity:1}93.5%{opacity:0}94%{opacity:1}}@keyframes textFlicker{0%,100%{opacity:1}92%{opacity:1}92.5%{opacity:0}93%{opacity:1}93.5%{opacity:0}94%{opacity:1}}.cyber-icon{-webkit-animation:iconPulse 2s ease-in-out infinite;-moz-animation:iconPulse 2s ease-in-out infinite;-o-animation:iconPulse 2s ease-in-out infinite;animation:iconPulse 2s ease-in-out infinite}@-webkit-keyframes iconPulse{0%,100%{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);transform:scale(1.1)}}@-moz-keyframes iconPulse{0%,100%{-moz-transform:scale(1);transform:scale(1)}50%{-moz-transform:scale(1.1);transform:scale(1.1)}}@-o-keyframes iconPulse{0%,100%{-o-transform:scale(1);transform:scale(1)}50%{-o-transform:scale(1.1);transform:scale(1.1)}}@keyframes iconPulse{0%,100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);transform:scale(1.1)}}.audio-bar{-webkit-transform-origin:bottom;-moz-transform-origin:bottom;-ms-transform-origin:bottom;-o-transform-origin:bottom;transform-origin:bottom;-webkit-transition:-webkit-transform.1s ease;-moz-transition:-moz-transform.1s ease;-o-transition:-o-transform.1s ease;transition:-webkit-transform.1s ease;transition:-moz-transform.1s ease;transition:-o-transform.1s ease;transition:transform.1s ease}@-webkit-keyframes slideUp{from{-webkit-transform:translatey(100%);transform:translatey(100%);opacity:0}to{-webkit-transform:translatey(0);transform:translatey(0);opacity:1}}@-moz-keyframes slideUp{from{-moz-transform:translatey(100%);transform:translatey(100%);opacity:0}to{-moz-transform:translatey(0);transform:translatey(0);opacity:1}}@-o-keyframes slideUp{from{-o-transform:translatey(100%);transform:translatey(100%);opacity:0}to{-o-transform:translatey(0);transform:translatey(0);opacity:1}}@keyframes slideUp{from{-webkit-transform:translatey(100%);-moz-transform:translatey(100%);-o-transform:translatey(100%);transform:translatey(100%);opacity:0}to{-webkit-transform:translatey(0);-moz-transform:translatey(0);-o-transform:translatey(0);transform:translatey(0);opacity:1}}@-webkit-keyframes slideDown{from{-webkit-transform:translatey(0);transform:translatey(0);opacity:1}to{-webkit-transform:translatey(100%);transform:translatey(100%);opacity:0}}@-moz-keyframes slideDown{from{-moz-transform:translatey(0);transform:translatey(0);opacity:1}to{-moz-transform:translatey(100%);transform:translatey(100%);opacity:0}}@-o-keyframes slideDown{from{-o-transform:translatey(0);transform:translatey(0);opacity:1}to{-o-transform:translatey(100%);transform:translatey(100%);opacity:0}}@keyframes slideDown{from{-webkit-transform:translatey(0);-moz-transform:translatey(0);-o-transform:translatey(0);transform:translatey(0);opacity:1}to{-webkit-transform:translatey(100%);-moz-transform:translatey(100%);-o-transform:translatey(100%);transform:translatey(100%);opacity:0}}' })] }) }; function HowItWorks() { return (0, s.jsx)("div", { className: "", children: (0, s.jsxs)("div", { className: "overflow-y-auto project-main rounded-lg text-card-foreground shadow-sm overflow-hidden", children: [(0, s.jsx)("div", { className: "project-grid" }), (0, s.jsx)("div", { className: "project-data-stream" }), (0, s.jsxs)("div", { className: "project-content", children: [(0, s.jsxs)("div", { className: "relative w-full max-w-4xl mx-auto flex justify-center", children: [(0, s.jsx)(components_FuturisticImage, { imgSrc: "/works.png", size: "medium" }), (0, s.jsx)("div", { className: "absolute top-8 left-0 right-0 z-50", children: (0, s.jsx)(components_AnimatedTitle, { className: "text-center", text: "How does the Agent work?", size: "lg" }) })] }), (0, s.jsxs)("div", { className: "info-section mt-8", children: [(0, s.jsxs)("p", { className: "project-text glow-text", children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "Gagster Agent" }), " is the demo AI agent launched through ACC Platform, and it is currently running on version ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "ACC-OS v2.0.4" }), ", the most recent ACC Framework version."] }), (0, s.jsxs)("div", { className: "tech-section", children: [(0, s.jsxs)("p", { className: "project-text", children: [(0, s.jsx)("span", { className: "cyber-text-effect", children: "ACC Framework" }), " will include a public no-code web platform where non technical people will able to launch an agent just as easy as launching a token at pump.fun. The platform is currently in closed alpha stages and will be released soon. ACC will also automate pump.fun tokens deployments tied to those agents."] }), (0, s.jsxs)("p", { className: "project-text", children: ["As you can see at ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Act 5" }), " section, ACC has also opensourced the initial code version from their platform as the ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Gagster Framework" }), " and now it is free to use. But it requires technical expertise to setup and run the agents."] })] }), (0, s.jsx)("br", {}), (0, s.jsxs)("div", { className: "capabilities-section", children: [(0, s.jsx)("h2", { className: "section-title", children: "What makes ACC different from other automations?" }), (0, s.jsxs)("div", { className: "capabilities-grid", children: [(0, s.jsxs)("div", { className: "capability-box wide border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Art feedback ingestion" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Gagster Agent is constantly ingesting feedbacks from community on X and Telegram" }), (0, s.jsx)("li", { children: "The models are constantly adapting and evolving by processing the ingested data" }), (0, s.jsx)("li", { children: "Next art created will reflect community sentiment in some way" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box wide border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Unique art concept generation" }), (0, s.jsx)("p", { children: "Inspired on the infinite backrooms, we have multiple models running on the platform and each artwork generated is the result of a brainstorming session between the models." }), (0, s.jsx)("p", { children: "Three main topics are discussed by the models throughout an art generation:" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Scene: The background or location for the piece" }), (0, s.jsx)("li", { children: "Characters: Who will be involved in the scene" }), (0, s.jsx)("li", { children: "Context: The situation or motivation giving sense to the scene" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsx)("h3", { className: "feature-title", children: "The Concept Models" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsx)("li", { children: "Claude 3.5 Haiku" }), (0, s.jsx)("li", { children: "Llama 3.3" }), (0, s.jsx)("li", { children: "GPT-4o" })] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsx)("h3", { className: "feature-title", children: "ACC-OS Custom RAG model" }), (0, s.jsx)("p", { className: "", children: "All the decision making is made by our own custom model based on llama-3.3." }), (0, s.jsx)("p", { className: "", children: " This model leverages the brainstorming session results and decide which collaborations from each model will be used in the final composition." }), (0, s.jsxs)("p", { className: "feature-subtitle", children: ["If you keep an eye on the ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Act 3" }), " activity session you might be able to spot some logs related to the creation process."] }), (0, s.jsx)("div", { className: "cyber-border" })] }), (0, s.jsxs)("div", { className: "capability-box border border-[#4AFF91] p-6 rounded-lg backdrop-blur-sm bg-black/90 hover:shadow-[0_0_20px_rgba(74,255,145,0.9)] transition-all duration-300", children: [(0, s.jsx)("h3", { className: "feature-title", children: "Agent Integrations" }), (0, s.jsxs)("ul", { className: "feature-list", children: [(0, s.jsxs)("li", { children: ["For providing feedback on Gagster Agent's art you can reply one of its art posts on ", (0, s.jsx)("a", { className: "cyber-text-effect", href: "https://x.com/GagsterAgent", children: "Twitter" })] }), (0, s.jsxs)("li", { children: ["Send a direct message on ", (0, s.jsx)("a", { className: "cyber-text-effect", href: "https://t.me/GagsterAi_bot", children: "Telegram" })] }), (0, s.jsxs)("li", { children: ["Or talk to it directly in the website ", (0, s.jsx)("span", { className: "cyber-text-effect", children: "Terminal" })] })] }), (0, s.jsx)("div", { className: "cyber-border" })] })] })] }), (0, s.jsx)("br", {})] }), (0, s.jsx)("div", { className: "project-corner tl" }), (0, s.jsx)("div", { className: "project-corner tr" }), (0, s.jsx)("div", { className: "project-corner bl" }), (0, s.jsx)("div", { className: "project-corner br" })] })] }) }) } function Home() { let [e, t] = (0, m.useState)(!1), { setTheme: a } = (0, d.F)(), [r, n] = (0, m.useState)("About"); if ((0, m.useEffect)(() => { t(!0), a("dark"); let e = document.createElement("style"); return e.innerText = "\n    @media (max-width: 639px) {\n      .nav-sidebar {\n        position: static;\n        width: 100%;\n        height: auto;\n        padding-left: 1rem !important;\n      }\n      .nav-container {\n        position: relative;\n        padding: 1rem;\n        width: 100%;\n      }\n      .nav-wrapper {\n        gap: 1.5rem;\n      }\n      .main-content {\n        padding: 1rem;\n        margin-left: 0;\n      }\n      .content-wrapper {\n        max-width: 100%;\n        padding: 0 1rem;\n      }\n    }\n  ", document.head.appendChild(e), () => { document.head.removeChild(e) } }, []), !e) return null; let handleOptionClick = e => { let t = e.currentTarget, a = t.getAttribute("id"); n(a) }; return (0, s.jsxs)("div", { className: "flex flex-col sm:flex-row bg-white dark:bg-custom-black bg-opacity-50 dark:bg-opacity-15 cursor-none h-screen overflow-hidden z-[9] body-cover", children: [(0, s.jsx)("aside", { className: "nav-sidebar ".concat("Act 3: AI mind ignited" === r ? "pl-28" : "pl-16", " h-2/3 w-80 h-full flex flex-col items-center"), children: (0, s.jsxs)("div", { className: "nav-container pt-5 sm:pt-11 pl-5 sm:pl-6 pb-20", children: [(0, s.jsxs)("div", { className: "nav-wrapper flex flex-col gap-8", children: [(0, s.jsx)("div", { className: "flex flex-col items-center justify-start", children: (0, s.jsx)(components_CyberTitle, {}) }), (0, s.jsx)("div", { className: "nav-options-list flex flex-col gap-1", children: ["About", "How does it work?", "Act 1: The call to meme", "Act 2: The manifesto", "Act 3: AI mind ignited", "Act 4: Creation or Creator?", "Act 5: Revolution started"].map(e => (0, s.jsx)("p", { className: "nav-option ".concat(r === e ? "nav-option-active" : ""), id: e, onClick: handleOptionClick, children: (0, s.jsx)("a", { children: e }) }, e)) }), (0, s.jsx)(components_SocialLinks, {})] }), (0, s.jsx)(Terminal, {})] }) }), (0, s.jsx)("main", { className: "flex-grow overflow-hidden bg-content", children: (0, s.jsx)("div", { className: "flex items-start justify-center w-full sm:px-10 py-11 scroll-container", children: (0, s.jsx)("div", { className: "w-full max-w-[calc(100%-2rem)]", children: (e => { switch (e) { case "About": return (0, s.jsx)(components_About, {}); case "How does it work?": return (0, s.jsx)(HowItWorks, {}); case "Act 1: The call to meme": return (0, s.jsx)(WakeUpCall, {}); case "Act 2: The manifesto": return (0, s.jsx)(MemeManifesto, {}); case "Act 3: AI mind ignited": return (0, s.jsx)(MindIgnited, {}); case "Act 4: Creation or Creator?": return (0, s.jsx)(components_MemeGallery, {}); case "Act 5: Revolution started": return (0, s.jsx)(ProjectInfo, {}) } })(r) }) }) })] }) } function HomePage() { return (0, s.jsxs)(s.Fragment, { children: [(0, s.jsx)("svg", { xmlns: "http://www.w3.org/2000/svg", version: "1.1", width: "0", height: "0", children: (0, s.jsx)("defs", { children: (0, s.jsxs)("filter", { id: "pixelate", x: "0", y: "0", children: [(0, s.jsx)("feFlood", { x: "2", y: "2", height: "1", width: "1" }), (0, s.jsx)("feComposite", { width: "5", height: "5" }), (0, s.jsx)("feTile", { result: "a" }), (0, s.jsx)("feComposite", { in: "SourceGraphic", in2: "a", operator: "in" }), (0, s.jsx)("feMorphology", { operator: "dilate", radius: "2.5" })] }) }) }), (0, s.jsx)(Home, {}), (0, s.jsx)(ParticlesBackground, {})] }) } }, 2480: function () { } }, function (e) { e.O(0, [737, 934, 782, 526, 774, 888, 179], function () { return e(e.s = 8312) }), _N_E = e.O() }]);